/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.37
 * Generated at: 2020-08-07 04:54:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.best.ee.*;
import java.io.*;
import java.util.*;
import java.sql.*;

public final class Home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/footer.jsp", Long.valueOf(1596725979375L));
    _jspx_dependants.put("/header.jsp", Long.valueOf(1596727109807L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("com.best.ee");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\">\n");
      out.write("          <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n");
      out.write("          <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js\"></script>\n");
      out.write("          <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js\"></script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<header>\n");
      out.write("      <div class=\"container\">\n");
      out.write("        <nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\">\n");
      out.write("          <ul class=\"navbar-nav\">\n");
      out.write("            <li class=\"nav-item active\">\n");
      out.write("              <a class=\"nav-link\" href=\"#\">Home</a>\n");
      out.write("            </li>\n");
      out.write("            <li class=\"nav-item\">\n");
      out.write("              <a class=\"nav-link\" href=\"Student.jsp\">Student</a>\n");
      out.write("            </li>\n");
      out.write("            <li class=\"nav-item\">\n");
      out.write("            <a class=\"nav-link\" href=\"AddBook.jsp\">Add Book</a>\n");
      out.write("          </li>\n");
      out.write("          <li class=\"nav-item\">\n");
      out.write("            <a class=\"nav-link\" href=\"#\">Rent Book</a>\n");
      out.write("          </li>\n");
      out.write("          <li class=\"nav-item\">\n");
      out.write("            <a class=\"nav-link\" href=\"#\">Return Book</a>\n");
      out.write("           </li>\n");
      out.write("          \n");
      out.write("        </ul>\n");
      out.write("      </nav>\n");
      out.write("                                              \n");
      out.write("    </div>\n");
      out.write("</header>");
      out.write('\n');
 
      out.write("\n");
      out.write("\n");
      out.write("Class.forName(\"com.mysql.jdbc.Driver\");\n");
      out.write("\tConnection con = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/mydb\", \"root\", \"root\");\n");
      out.write(" \tStatement stmt = con.createStatement();\n");
      out.write("\t\t\n");
      out.write(" \tResultSet rs = stmt.executeQuery(\"select * from Library-Book\");\n");
      out.write(" \t List<Book> booklist = new ArrayList<>();\n");
      out.write(" \twhile (rs.next()) {\n");
      out.write(" \tBook book = new Book();\n");
      out.write(" \tbook.setId(rs.getInt(\"id\"));\n");
      out.write(" \tbook.setName(rs.getString(\"name\"));\n");
      out.write(" \tbook.setCategory(rs.getString(\"category\"));\n");
      out.write(" \tbook.setPrice(rs.getInt(\"price\"));\n");
      out.write(" \tbook.setIsbn(rs.getString(\"isbn\"));\n");
      out.write(" \tSystem.out.println(\"Successful\");\n");
      out.write(" \tbooklist.add(book);\n");
      out.write(" }\n");
      out.write("\n");
      out.write("con.close();\n");
      out.write("//request.setAttribute(\"booklist\", booklist);\n");
      out.write("\n");
      out.write("%>\n");
      out.write("<h3>Book List</h3>\n");
      out.write("<button>Add Book</button>\n");
      out.write("<table class=\"table table-hover\">\n");
      out.write("\t<thead>\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<th>Name</th>\n");
      out.write("\t\t\t<th>Author</th>\n");
      out.write("\t\t\t<th>Category</th>\n");
      out.write("\t\t\t<th>Price</th>\n");
      out.write("\n");
      out.write("\t\t\t<th>ISBN</th>\n");
      out.write("\t\t\t<th>Qty</th>\n");
      out.write("\t\t</tr>\n");
      out.write("\t</thead>\n");
      out.write("\t<tbody>\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td>Book1</td>\n");
      out.write("\t\t\t<td>Category1</td>\n");
      out.write("\t\t\t<td>1000</td>\n");
      out.write("\t\t\t<td>JUE</td>\n");
      out.write("\t\t\t<td>123</td>\n");
      out.write("\t\t\t<td>10</td>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td>Book1</td>\n");
      out.write("\t\t\t<td>Category1</td>\n");
      out.write("\t\t\t<td>1000</td>\n");
      out.write("\t\t\t<td>JUE</td>\n");
      out.write("\t\t\t<td>123</td>\n");
      out.write("\t\t\t<td>10</td>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td>Book1</td>\n");
      out.write("\t\t\t<td>Category1</td>\n");
      out.write("\t\t\t<td>1000</td>\n");
      out.write("\t\t\t<td>JUE</td>\n");
      out.write("\t\t\t<td>123</td>\n");
      out.write("\t\t\t<td>10</td>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td>Book1</td>\n");
      out.write("\t\t\t<td>Category1</td>\n");
      out.write("\t\t\t<td>1000</td>\n");
      out.write("\t\t\t<td>JUE</td>\n");
      out.write("\t\t\t<td>123</td>\n");
      out.write("\t\t\t<td>10</td>\n");
      out.write("\t\t</tr>\n");
      out.write("\t</tbody>\n");
      out.write("</table>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
